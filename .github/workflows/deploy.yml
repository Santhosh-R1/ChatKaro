name: Deploy ChatKaro via MERN Platform

on:
  workflow_dispatch:
    inputs:
      target_cloud:
        required: true
      deployment_id:
        required: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        # This matches your "Root Directory" setting on Vercel.
        working-directory: ./Chat

    steps:
      - name: 1. Checkout repository code
        uses: actions/checkout@v4

      - name: 2. Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 3. Install Dependencies
        run: npm install

      - name: 4. Build Project
        # This matches your "Build Command" setting on Vercel.
        run: npm run build

      - name: 5. Install Vercel CLI
        # Install CLI in the root, so it's globally available.
        run: npm install --global vercel
        working-directory: ${{ github.workspace }}

      - name: 6. Deploy to Vercel
        id: deploy_step
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          # ===================================================================
          #  THIS IS THE FINAL, CORRECTED COMMAND.
          #  It no longer specifies a path, allowing your Vercel project
          #  settings ('Root Directory: Chat', 'Output Directory: dist')
          #  to take control.
          # ===================================================================
          DEPLOYMENT_URL=$(vercel --prod --yes --token=${{ secrets.VERCEL_TOKEN }})
          echo "DEPLOYMENT_URL=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
      
      - name: 7. Report Success to API
        if: success()
        working-directory: ${{ github.workspace }}
        run: |
          curl --fail -v -X PATCH '${{ secrets.API_URL }}/api/projects/${{ secrets.PROJECT_ID }}/deployments/${{ github.event.inputs.deployment_id }}' \
          -H "Content-Type: application/json" \
          --data-raw '{
            "status": "success",
            "deploymentUrl": "${{ steps.deploy_step.outputs.DEPLOYMENT_URL }}",
            "apiKey": "${{ secrets.ACTIONS_API_KEY }}"
          }'

      - name: 8. Report Failure to API
        if: failure()
        working-directory: ${{ github.workspace }}
        run: |
          curl --fail -v -X PATCH '${{ secrets.API_URL }}/api/projects/${{ secrets.PROJECT_ID }}/deployments/${{ github.event.inputs.deployment_id }}' \
          -H "Content-Type: application/json" \
          --data-raw '{
            "status": "failure",
            "apiKey": "${{ secrets.ACTIONS_API_KEY }}"
          }'
